import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2.0.777'
    }
}

apply plugin: 'forge'
apply plugin: 'maven'
apply from: 'build.properties'

minecraft {
    runDir = "eclipse/"
}

project.version = getVersion()

minecraft {	
    replaceIn "Reference.java"
    replace "@VERSION@", project.version
    replace "@MODID@", project.archivesBaseName
    replace "@MODNAME@", project.longname
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

tasks.build.dependsOn('deobfJar', 'sourceJar')

processResources
{
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand project.properties
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

repositories {
    mavenLocal()
}

artifacts {
    archives jar
    archives deobfJar
    archives sourceJar
}

install.dependsOn build

dependencies {}

def getVersion() {
    def stdout = new ByteArrayOutputStream()
    exec {
        executable "git"
        args "rev-list", "--count", "HEAD"
        standardOutput = stdout
    }
    project.ext.revision = stdout.toString().trim()
    stdout.reset()
    exec {
        executable "git"
        args "rev-parse", "--abbrev-ref", "HEAD"
        standardOutput = stdout
    }
    project.ext.branch = stdout.toString().trim()
    return "${major}.${minor}.${patch}.${revision}${branch == 'master' ? '' : '-' + branch}-${minecraft.version}"
}

